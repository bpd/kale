package main

import "fmt"

// field/method names must be unique
// ... otherwise instance.slotName doesn't refer to a unique thing,
// so &instance.slotName can't reference a unique thing
type Person
{
  name string;
  age int;
  
  Age() int
  {
    return this.age;
  }
  
  SetAge(age int)
  {
    this.age = age;
  }
  
  + operator ( p1 Person, p2 Person ) Family
  {
    
  }
}

interface Mammal
{
  Age() int;
}

interface SomeInterface
{
  SomeMethod(name string, age int);
  SomeMethod2(name string, age int) Person;
}

someFunc( ) int {
  return 1;
}

someIntFunc( ) int {
  return 42;
}

main() {
  // just parse this as a sequence of operands
  // until the structure is parsed
  // should only affect Block contents  (RawBlock?)
  a = "asdf";
  b = 2 + 3;
  b1 = (3 + (5 - 4));
  b2 = someFunc() + (1 - 3);
  b3 = 6 + 7 - 8;
  b4 = b + b1 + someFunc() - 2;
  c = Person("Brian", 29);
  //c_ptr = &c.name;
  d = somepackage.SomeFunction( someIntFunc() , someIntFunc );
}



